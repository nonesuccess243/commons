<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- auto generated by nbm-dbgenerator at 2016-3-12 20:16:42 -->
<mapper namespace="com.wayeasoft.core.modeldriven.dao.CommonMapper">

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Base_Column_List">
		<foreach collection="meta.dbFields" item="field" separator=",">
				${field.dbName}
		</foreach>
	</sql>
	
	<sql id="Select_Column_List">
		<foreach collection="meta.dbFields" item="field" separator=",">
			<choose>
				<when test="field.dbType.simple">
					${field.dbName}
				</when>
				<otherwise>
					${field.dbTemplate.fetchPrefix}${field.dbName}${field.dbTemplate.fetchSuffix} AS ${field.dbName}<!-- AS ${field.dbName}_STRING -->
				</otherwise>
			</choose>
			
		</foreach>
	</sql>

	<select id="selectByExample" resultType="Map">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Select_Column_List" />
		from ${meta.dbTypeName}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
	</select>

	<select id="countByExample" resultType="java.lang.Integer">
		select count(*) from ${meta.dbTypeName}
		<if test="example != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<select id="selectById" resultType="Map">
		select
		<include refid="Select_Column_List" />
		from ${meta.dbTypeName}
		where ID = #{id,jdbcType=BIGINT}
	</select>

	<select id="selectByName" resultType="Map">
		select
		<include refid="Base_Column_List" />
		from ${meta.dbTypeName}
		where ${nameCol} = #{name,jdbcType=BIGINT}
	</select>


	<delete id="deleteById">
		delete from ${meta.dbTypeName}
		where ID =
		#{id,jdbcType=BIGINT}
	</delete>

	<delete id="deleteByExample">
		delete from ${meta.dbTypeName}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<insert id="insert">
		<selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long"
			databaseId="mysql">
			SELECT LAST_INSERT_ID()
		</selectKey>

		<selectKey keyProperty="record.id" order="BEFORE"
			resultType="java.lang.Long" databaseId="oracle">
			select ${meta.dbTypeName}_SEQ
			from dual
		</selectKey>

		insert into ${meta.dbTypeName} (

		<include refid="Base_Column_List" />
		)
		values (
		<foreach collection="meta.dbFields" item="field" separator=",">
			<choose>
				<when test="field.dbType.simple">
					#{record.${field.name}}
				</when>
				<otherwise>
					${field.dbTemplate.populatePrefix}#{record.${field.name}.sqlString}${field.dbTemplate.populateSuffix}
				</otherwise>
			</choose>
		</foreach>
		)
	</insert>

	<update id="updateById" parameterType="map">
		update ${meta.dbTypeName}
		set
		<foreach collection="meta.dbFields" item="field" separator=",">
			${field.dbName} = 
			
			<choose>
				<when test="field.dbType.simple">
					#{record.${field.name}}
				</when>
				<otherwise>
					${field.dbTemplate.populatePrefix}#{record.${field.name}.sqlString}${field.dbTemplate.populateSuffix}
				</otherwise>
			</choose>
		</foreach>
		where ID = #{record.id,jdbcType=BIGINT}
	</update>

	<!-- 在开发updateByExample的过程中，存在疑难问题，判断每个字段不为空时动态生成set语句的逻辑中，if条件不能动态生成。 考虑到此sql语句的设计思维也不符合我们的编程规范，暂时不再继续研究，不提供此api -->

	<!-- <update id="updateByExample" parameterType="map"> update ${meta.dbTypeName} 
		<set> <foreach collection="meta.dbFields" item="fields" separator=","> <if 
		test="record.${fields.name} != null"> ${fields.dbName} = #{record.${fields.name}} 
		</if> </foreach> </set> <if test="example != null"> <include refid="Update_By_Example_Where_Clause" 
		/> </if> </update> -->
</mapper>